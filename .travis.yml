sudo: required
#language: php
#php:
#  - 7.2
services:
  - mysql
  - docker

addons:
  hosts:
    - nginx.symfony
    - selenium.symfony
    - prod.php.symfony
    - php.symfony
    - frontend.symfony

cache:
  yarn: true
  directories:
  - $HOME/.composer/cache/files
  - node_modules

before_install:
  - cat .env.dist | sed "s/LOCAL_USER_ID=1000/LOCAL_USER_ID=$(id -u)/" | sed "s/LOCAL_GROUP_ID=1000/LOCAL_GROUP_ID=$(id -g)/" > .env
  - echo "DATABASE_URL=mysql://root:@127.0.0.1:3306/gifts" >> .env # Last parameter is used. Updated to Travis login

  # Starting Selenium container
#  - docker pull selenium/standalone-chrome:3.11.0-dysprosium
#  - docker run -d -p 127.0.0.1:4444:4444 selenium/standalone-chrome:3.11.0-dysprosium
  # Starting docker containers
  - echo "Starting docker containers..."
  - sudo docker-compose up -d frontend.symfony prod.php.symfony nginx.symfony selenium.symfony
  - docker ps -a

install:
  - docker-compose run --rm frontend.symfony bash -c "id"
  - docker-compose run --rm frontend.symfony bash -c "yarn install"
  - docker-compose exec prod.php.symfony composer install --no-interaction --prefer-dist
  - docker-compose exec prod.php.symfony cd acceptance-tests && composer install --no-interaction --prefer-dist

before_script:
# Get the token from github and put it in travis repo under GITHUB_COMPOSER_AUTH ENV variable, then uncomment line below.
#  - composer config -g github-oauth.github.com $GITHUB_COMPOSER_AUTH
  - echo "Setting up database..."
  - docker-compose exec prod.php.symfony bin/console doc:database:drop --if-exists --force
  - docker-compose exec prod.php.symfony bin/console doctrine:database:create
  - docker-compose exec prod.php.symfony bin/console doctrine:migration:diff
  - docker-compose exec prod.php.symfony bin/console doctrine:migration:migrate --no-interaction
  - echo "Loading fixtures..."
  - docker-compose exec prod.php.symfony bin/console doctrine:fixtures:load --no-interaction
  - echo "Building frontend assets..."
  - docker-compose run --rm frontend.symfony bash -c "yarn run encore production"

script:
  - docker-compose exec prod.php.symfony vendor/bin/phpcs -p --standard=PSR2 --extensions=php ./src
  - docker-compose exec prod.php.symfony bin/phpunit
  - docker-compose exec prod.php.symfony cd acceptance-tests && vendor/bin/codecept run --debug --env=travis

after_failure:
  - tail -n 5000 $TRAVIS_BUILD_DIR/acceptance-tests/tests/_output/*
